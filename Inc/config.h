/*      Назначение:
Модуль предназначен для управления любым устройством по радиосвязи NRF.
Что используется в проекте:
- джойстик в качестве корпуса,
- плата BlePill (STM32F103REV6),
- радиомодуль NRF24L (не подделка),
- аккумулятор Li-Ion (3,7v),
- зарядная плата
- модуль -----
- ин

        Работа:
  При старте однократно загораются все светодиоды, далее идет поиск NRF модуля
при этом быстро мигает синий светодиод, если модуль найден то переходит в режим
нормальной работы редкое мигание синего светодиода.
  Если не нажимать кнопки и не дергать стики то в течении 5 минут джойстик засыпает.
Просыпаемся по нажатию start.
энергопотребление - режим работы = 0.040А
                  - режим сна    = 0.005А
  При долгом удержании кнопки home 4s  (в осн настройках) поазывает заряд акб передатчика
мигает все 1раз, после покажет заряд джойстика (градация 0-25%, 25-50%, 50-75%, 75-100%).
  При долгом удержании кнопки home 4s (в доп настройках (кн. select)) поазывает заряд акб приемника
мигает все 2раза, после покажет заряд приемника (градация 0-25%, 25-50%, 50-75%, 75-100%)

        Протокол:
Каждые 200ms отправляются данные по протоколу 12байт
0.0     - кнопка up
0.1     - кнопка dawn
0.2     - кнопка write
0.3     - кнопка left
0.4     - кнопка O
0.5     - кнопка X
0.6     - кнопка A
0.7     - кнопка B
1.0     - кнопка Lb
1.1     - кнопка Ls
1.2     - кнопка Wb
1.3     - кнопка Ws
1.4     - кнопка start
1.5     - кнопка select
1.6     - кнопка home
1.7     - кнопка back--не работает
2.0     - кнопка list
2.1     - кнопка StickA
2.2     - кнопка StickB
2.3-2.7 - none
3.0-3.3 - режим mode.osn
3.4-3.7 - режим mode.dop
    
4.0-5.7   - jStickA.ValV
6.0-7.7   - jStickA.ValG
8.0-9.7   - jStickB.ValV
10.0-11.7 - jStickB.ValG

Передавать не больше 32-х байт 
получается отправляем 12(16) байт (кнопки+ режим, стикА и стикВ)
кнопки - 4 байта
0011 0011 0000 0111 1111 1111 1111 1111
 dop  osn       |<-           кнопки <-
стикА - 4 байта
0000 1111 1111 1111 0000 1111 1111 1111
|<-         ValG <- |<-         ValV <-
стикВ - 4 байта
0000 1111 1111 1111 0000 1111 1111 1111
|<-         ValG <- |<-         ValV <-



        Индикация:-----
Кнопкой Select переключаем просмотр активного режима (основной и дополнительный).
Кнопкой Start переключаем режим (1,2,3)
индикация: 
_____ Светодиод 1 - выбран режим 1
_ _ _ Светодиод 1 - выбран доп. режим 1

_____ Светодиод 2 - выбран режим 2
_ _ _ Светодиод 2 - выбран доп. режим 2

_____ Светодиод 3 - выбран режим 3
_ _ _ Светодиод 3 - выбран доп. режим 3

      Светодиод 4 - контроллер выключен
_   _ Светодиод 4 - контроллер в норме
_____ Светодиод 4 - контроллер спит
_ _ _ Светодиод 4 - контроллер не нашел NRF

_____ Все светодиоды горят - ошибка контроллера(перезагрузить)


        Настройка:
NRF:
  
GPIO:----
  PB12- up
  PB13- dawn
  PB14- write
  PB15- left
  PA8 - O
  PA9 - X
  PA10- A
  PA11- B
  PA12- back--не работает
  PA15- LED_4
  PB3 - Lb
  PB4 - Ls
  PB5 - Wb
  PB6 - Ws
  PB7 - select
  PB8 - home
  PB9 - list
  5V
  GND
  3V3
  //------
  GND
  GND
  3V3
  NRST
  PB11- jStickA.Batton 
  PB10- jStickB.Batton
  PB1 - SPI1_CS
  PB0 - SPI1_DT
  PA7 - SPI1_MOSI
  PA6 - SPI1_MISO
  PA5 - SPI1_SCK
  PA4 - ADC1_IN4
  PA3 - ADC1_IN3
  PA2 - ADC1_IN2
  PA1 - ADC1_IN1
  PA0 - WKUP - start - EXTI
  PC15- LED_3
  PC14- LED_2
  PC13- LED_1
  //------
  -non PA13-програматор
  -non PA14-програматор
  -non PB2 -BOOT1
Timer1:
  служит для основного подсчета всех задержек,
  72000/7199*9 прерывание каждую каждую 1ms
WatchDog:
  служит для перезагрузки контроллера,
  PCLK1/4096/VDGTB
  4500 кгц/4096/4 = 0.2746 кгц -> 3.6 ms
  таймер1 сбрасывает флаг каждую 1ms
*/

//ПАРАМЕТРЫ ПРОЕКТА
#define MODE_ON          1      //использование режимов работы
#define TIMER_SLEEP      60000*5//ms, время бездействия
#define OFFSET_ZERO      180    //смещение значения стиков, антидергание на нуле